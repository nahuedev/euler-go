/* Even Fibonacci numbers */

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main
import "fmt"

func isEven(number int) bool {
	return number%2 == 0
}

func SumEvenSequenceFibonacci() int {
	top := 4000000
	sum := 0
	n1 := 1
	n2 := 2

	for n1 < top {
		if isEven(n1) {
			sum += n1
		}
		fibonacci := n1 + n2
		n1 = n2
		n2 = fibonacci
	}
	return sum

}

func main() {
	fmt.Println(SumEvenSequenceFibonacci())

}
